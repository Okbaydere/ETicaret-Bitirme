@using System.ComponentModel.DataAnnotations
@using Data.ViewModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Data.ViewModels.OrderDetailsViewModel
@{
    ViewData["Title"] = "Sipariş Detayı";
}

<h2>@ViewData["Title"] - #@Model.OrderNumber</h2>

<div class="card mb-4">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h5 class="mb-0">Sipariş Bilgisi</h5>
            </div>
            <div class="col-md-6 text-end">
                @{
                    string badgeClass = Model.OrderState switch
                    {
                            EnumOrderState.Waiting => "bg-warning",
                            EnumOrderState.Completed => "bg-success",
                            EnumOrderState.Canceled => "bg-danger",
                            _ => "bg-secondary"
                    };

                    // Display attribute kullanarak enum adını alalım
                    var orderStateType = typeof(EnumOrderState);
                    var memberInfo = orderStateType.GetMember(Model.OrderState.ToString()).FirstOrDefault();
                    string? displayName = null; // Nullable yapıldı ve başlangıç değeri atandı
                    if (memberInfo != null)
                    {
                        var displayAttribute = (DisplayAttribute?)
                                Attribute.GetCustomAttribute(memberInfo, typeof(DisplayAttribute));
                        displayName = displayAttribute?.Name ?? Model.OrderState.ToString(); // Null kontrolü ile atama
                    }
                    // Eğer displayName hala null ise (memberInfo bulunamadıysa), varsayılanı kullan
                    displayName ??= Model.OrderState.ToString();
                }
                <span class="badge @badgeClass">@displayName</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <p><strong>Sipariş No:</strong> @Model.OrderNumber</p>
                <p><strong>Sipariş Tarihi:</strong> @Model.OrderDate.ToString("dd.MM.yyyy HH:mm")</p>
                <p><strong>Kullanıcı Adı:</strong> @Model.CustomerName</p>
            </div>
            <div class="col-md-6">
                <p><strong>Toplam Tutar:</strong> @Model.Total.ToString("C")</p>
                <p><strong>Adres:</strong> @Model.AddressTitle</p>
                <p><strong>Teslimat Adresi:</strong> @Model.Address, @Model.City</p>
            </div>
        </div>
    </div>
</div>

<h4>Sipariş Kalemleri</h4>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
        <tr>
            <th>Ürün</th>
            <th>Fiyat</th>
            <th>Adet</th>
            <th>Tutar</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.OrderLines)
        {
            <tr>
                <td>
                    <div class="d-flex align-items-center">
                        @if (!string.IsNullOrEmpty(item.Image))
                        {
                            <img src="@item.Image" alt="@item.Name" class="img-thumbnail me-2"
                                 style="width: 50px; height: 50px; object-fit: cover;">
                        }
                        <span>@item.Name</span>
                    </div>
                </td>
                <td>@item.Price.ToString("C")</td>
                <td>@item.Quantity</td>
                <td>@((item.Price * item.Quantity).ToString("C"))</td>
            </tr>
        }
        </tbody>
        <tfoot>
        <tr>
            <td colspan="3" class="text-end"><strong>Toplam:</strong></td>
            <td><strong>@Model.Total.ToString("C")</strong></td>
        </tr>
        </tfoot>
    </table>
</div>

<div class="mt-4">
    @if (Model.OrderState == EnumOrderState.Waiting && User.IsInRole("Admin"))
    {
        <div class="d-flex">
            <form asp-action="OrderState" method="post" class="me-2">
                <input type="hidden" name="id" value="@Model.OrderId"/>
                <input type="hidden" name="state" value="@EnumOrderState.Completed"/>
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-check"></i> Siparişi Tamamla
                </button>
            </form>

            <form asp-action="OrderState" method="post">
                <input type="hidden" name="id" value="@Model.OrderId"/>
                <input type="hidden" name="state" value="@EnumOrderState.Canceled"/>
                <button type="submit" class="btn btn-danger">
                    <i class="fa fa-times"></i> Siparişi İptal Et
                </button>
            </form>
        </div>
    }
    else
    {
        <div>
            <span class="fs-5">Sipariş Durumu:
                @if (Model.OrderState == EnumOrderState.Completed)
                {
                    <span class="badge bg-success">Tamamlandı</span>
                }
                else if (Model.OrderState == EnumOrderState.Canceled)
                {
                    <span class="badge bg-danger">İptal Edildi</span>
                }
            </span>
        </div>
    }

    <div class="mt-3">
        @if (User.IsInRole("Admin"))
        {
            <a asp-controller="Order" asp-action="Index" class="btn btn-secondary">
                <i class="fa fa-list"></i> Tüm Siparişler
            </a>
        }
        else
        {
            <a asp-controller="Account" asp-action="GetOrders" class="btn btn-secondary">
                <i class="fa fa-list"></i> Siparişlerim
            </a>
        }
    </div>

</div>